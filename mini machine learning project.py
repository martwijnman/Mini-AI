# -*- coding: utf-8 -*-
"""Magic

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qQKZ_3HmMyKL8_raTem2rfCSRilceoCH
"""

import numpy as np
import matplotlib.pyplot as plt

# lineare regressie
# y = w*x + b

X = np.random.normal(size=(100,))

y = 3 * X - 1



plt.scatter(X, y)

import jax.numpy as jnp
from jax import grad

def forwardpass(theta, x):
  w, b = theta
  return w * x + b

def lossfn(theta, x, y):
  prediction = forwardpass(theta, x)
  return jnp.mean((prediction-y)**2)

theta = jnp.array([0., 0.])
lr = 0.1

for i in range(1000):
  dtheta = grad(lossfn)
  theta = theta - lr * dtheta(theta, X, y)

plt.scatter(X, y)

pred = forwardpass(theta, X)
plt.plot(X, pred)